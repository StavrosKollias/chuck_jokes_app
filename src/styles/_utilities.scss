@import "./variables";

* {
   box-sizing: border-box;
   margin: 0;
   padding: 0;
}

html {
   @media (max-width: $mobile) {
      font-size: 15px;
   }
}

h1 {
   font-weight: 500;
   font-size: 1.5rem;

   @media (min-width: $mobile) {
      font-size: 2rem;
   }
}

h2 {
   font-weight: 500;
   font-size: 1.3rem;

   @media (min-width: $mobile) {
      font-size: 1.7rem;
   }
}

p {
   font-size: 1rem;
   @media (min-width: $mobile) {
      font-size: 1.2rem;
   }
}

input[type="submit"],
button {
   cursor: pointer;
   position: relative;
   border: none;
   width: auto;
   padding: 0.5rem 1rem;
   border-radius: 3px;
   transition: all 0.2s ease-in-out;

   i {
      font-size: 1rem;
   }
}

input[type="submit"] {
   border-radius: unset;
}

ul {
   list-style: none;
   display: inline-block;
}

li {
   display: inline-block;
}

a {
   position: relative;
   border: none;
   width: auto;
   display: inline-block;
   text-decoration: none;
   transition: all 0.35s ease-in-out;
   padding: 0.5rem 1rem;

   &:focus {
      outline: none;
   }
}

i {
   font-size: 2rem;
   transition: all 0.05s ease-in-out;
}

input {
   padding: 0.5rem;
   border: none;

   &:focus {
      outline: none;
   }
}

.container {
   padding: 0 1rem;
}

.mb {
   &-1 {
      margin-bottom: 1rem;
   }

   &-2 {
      margin-bottom: 3rem;
   }

   &-3 {
      margin-bottom: 3rem;
   }
}

.mt {
   &-1 {
      margin-top: 1rem;
   }

   &-2 {
      margin-top: 3rem;
   }

   &-3 {
      margin-top: 3rem;
   }
}

.py {
   &-1 {
      padding: 1rem 0;
   }

   &-2 {
      padding: 2rem 0;
   }

   &-3 {
      padding: 2rem 0;
   }
}

.px {
   &-1 {
      padding: 0 1rem;
   }

   &-2 {
      padding: 0 2rem;
   }

   &-3 {
      padding: 0 3rem;
   }
}

.txt {
   &-primary {
      color: $primary-color;
   }

   &-secondary {
      color: $secondary-color;
   }

   &-light-blue {
      color: $light-blue-color;
   }

   &-light {
      color: $light-color;
   }

   &-light-gray {
      color: $light-gray-color;
   }

   &-gray {
      color: $gray-color;
   }

   &-bold {
      font-weight: bold;
   }

   &-center {
      text-align: center;
   }
}

.btn {
   &-primary {
      background: $primary-color;
      color: set-text-color($primary-color);
      border: 1px solid $primary-color;

      &:hover,
      &:focus {
         background: $light-color;
         color: set-text-color($light-color);
         border-color: $primary-color;
      }
   }

   &-success {
      background: $success-color;
      color: set-text-color($success-color);
      border: 1px solid $success-color;

      &:hover,
      &:focus {
         background: $light-color;
         color: $success-color;
         border-color: $success-color;
      }
   }

   &-secondary {
      background: $secondary-color;
      color: set-text-color($secondary-color);
      border: 1px solid $secondary-color;

      &:hover,
      &:focus {
         background: $light-color;
         color: set-text-color($light-color);
         border-color: $secondary-color;
      }
   }

   &-light {
      background: $light-color;
      color: set-text-color($light-color);
      border: 1px solid $secondary-color;

      &:hover,
      &:focus {
         background: $primary-color;
         color: set-text-color($primary-color);
         border: 1px solid $primary-color;
      }
   }
   &-disabled {
      pointer-events: none;
      background-color: $light-gray-color;
      border-color: $light-gray-color;
   }
}

.input {
   &-primary {
      background: $primary-color;
      color: set-text-color($primary-color);
   }

   &-secondary {
      background: $secondary-color;
      color: set-text-color($secondary-color);

      .input-container-sub {
         background: $secondary-color;
      }
   }

   &-light {
      background: $light-color;
      color: set-text-color($light-color);

      .input-container-sub {
         background: $light-color;
      }
   }
}

.input-container {
   &-primary {
      background-color: $primary-color;
      border-bottom: 1px solid $primary-color;
      &:focus-within {
         border-color: set-text-color($primary-color);
      }
   }

   &-secondary {
      background-color: $secondary-color;
      border-bottom: 1px solid $secondary-color;

      &:focus-within {
         border-color: set-text-color($secondary-color);
      }
   }

   &-light {
      background-color: $light-color;
      border-bottom: 1px solid $light-color;

      &:focus-within {
         border-color: set-text-color($light-color);
      }
   }

   &-error {
      position: relative;
      border-bottom: 1px solid $danger-color;

      &:focus-within {
         border-color: set-text-color($danger-color);
      }
      & ~ button {
         pointer-events: none;
         background-color: $light-gray-color;
         border-color: $light-gray-color;
      }
   }
}

.grid {
   display: grid;
   grid-template-columns: 1fr;
   align-items: center;
   justify-content: center;

   &-item {
      width: 100%;
      height: 100%;
      align-self: center;
      justify-self: center;
      padding: 1rem;

      @media (min-width: $mobile) {
         grid-template-columns: repeat(3, 1fr);
      }
   }

   @media (min-width: $mobile) {
      grid-template-columns: repeat(3, 1fr);
   }
}

.grid-row-item {
   grid-column: 1;

   @media (min-width: $mobile) {
      grid-column: 1 / span 3;
   }
}

.display {
   &-flex-row-center {
      display: flex;
      justify-content: center;
      flex-direction: row;
   }

   &-flex-column {
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
   }
}

.search-container-controls {
   @extend %bar;
}

.error-span {
   position: absolute;
   top: 110%;
   left: 0.5rem;
   font-size: 0.8rem;
   color: $danger-color;
}

.load-more-container {
   margin: auto;
   padding: 1rem;
   width: 10%;
   min-width: 10rem;
   text-align: center;
   opacity: 0;
   transition: all 0.2s ease-in-out;
   transform: translateY(-1rem);

   &.show {
      opacity: 1;
      transform: translateY(0);
   }
}

.fetching-data {
   margin: auto;
}
